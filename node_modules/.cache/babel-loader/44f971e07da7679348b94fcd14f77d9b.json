{"ast":null,"code":"var _jsxFileName = \"C:\\\\movie_app_2020\\\\src\\\\App.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const movie = axios.get(\"https://yts-proxy.now.sh/list_movies.json\").then(response => console.log(response.data.status));\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isLoading ? \"Loading...\" : \"We are ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/movie_app_2020/src/App.js"],"names":["React","axios","App","Component","state","isLoading","movies","getMovies","movie","get","then","response","console","log","data","status","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KADwB;;AAAA,SAMhCC,SANgC,GAMpB,YAAW;AACrB,YAAMC,KAAK,GAAIP,KAAK,CAACQ,GAAN,CAAU,2CAAV,EACdC,IADc,CACPC,QAAD,IAAcC,OAAO,CAACC,GAAR,CACnBF,QAAQ,CAACG,IAAT,CAAcC,MADK,CADN,CAAf;AAKD,KAZ+B;AAAA;;AAchCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,SAAL;AACD;;AACDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,wBAAO;AAAA,gBAAMC,SAAS,GAAG,YAAH,GAAkB;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AApB+B;;AAuBlC,eAAeH,GAAf","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async() => {\n    const movie =  axios.get(\"https://yts-proxy.now.sh/list_movies.json\")\n    .then( (response) => console.log(\n      response.data.status\n    ))\n    \n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    const { isLoading } = this.state;\n    return <div>{isLoading ? \"Loading...\" : \"We are ready\"}</div>;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}