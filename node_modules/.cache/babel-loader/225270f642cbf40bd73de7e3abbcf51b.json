{"ast":null,"code":"var _jsxFileName = \"C:\\\\movie_app_2020\\\\src\\\\routes\\\\Home.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport Movies from '../components/Movies';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n      this.setState({\n        movies,\n        isLoading: false\n      });\n      this.setState({\n        movies\n      });\n    };\n  }\n\n  // shouldComponentUpdate(nextState, nextProps ){\n  //   if(this.state.movies !== nextState.movies){\n  //     return false\n  //   }\n  //   return true;\n  // }\n  componentDidMount() {\n    this.getMovies();\n    console.log(\"componentDidMount\");\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    console.log(\"render\");\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loader__text\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 81\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 57\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies\",\n        children: [this.state.movies.map(movies => /*#__PURE__*/_jsxDEV(Movies, {\n          id: movies.id,\n          year: movies.year,\n          title: movies.title,\n          summary: movies.summary,\n          poster: movies.medium_cover_image,\n          genres: movies.genres\n        }, movies.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/movie_app_2020/src/routes/Home.js"],"names":["React","axios","Movies","Home","Component","state","isLoading","movies","getMovies","data","get","setState","componentDidMount","console","log","render","map","id","year","title","summary","medium_cover_image","genres"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KADyB;;AAAA,SAMjCC,SANiC,GAMrB,YAAW;AACrB,YAAM;AACJC,QAAAA,IAAI,EAAG;AACLA,UAAAA,IAAI,EAAG;AAACF,YAAAA;AAAD;AADF;AADH,UAID,MAAMN,KAAK,CAACS,GAAN,CAAU,0DAAV,CAJX;AAKA,WAAKC,QAAL,CAAc;AAACJ,QAAAA,MAAD;AAASD,QAAAA,SAAS,EAAG;AAArB,OAAd;AACA,WAAKK,QAAL,CAAc;AAACJ,QAAAA;AAAD,OAAd;AAED,KAfgC;AAAA;;AAiBjC;AACA;AACA;AACA;AACA;AACA;AAEAK,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,SAAL;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,wBAAO;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,gBAAgCR,SAAS,gBAAI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BAAwB;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAJ,gBAChD;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,mBACG,KAAKD,KAAL,CAAWE,MAAX,CAAkBS,GAAlB,CAAwBT,MAAD,iBACxB,QAAC,MAAD;AAA0B,UAAA,EAAE,EAAIA,MAAM,CAACU,EAAvC;AAA2C,UAAA,IAAI,EAAIV,MAAM,CAACW,IAA1D;AAAgE,UAAA,KAAK,EAAIX,MAAM,CAACY,KAAhF;AAAuF,UAAA,OAAO,EAAGZ,MAAM,CAACa,OAAxG;AAAiH,UAAA,MAAM,EAAIb,MAAM,CAACc,kBAAlI;AAAsJ,UAAA,MAAM,EAAEd,MAAM,CAACe;AAArK,WAAef,MAAM,CAACU,EAAtB;AAAA;AAAA;AAAA;AAAA,gBADC,CADH;AAAA;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA,YAAP;AAKD;;AArCgC;;AAwCnC,eAAed,IAAf","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport Movies from '../components/Movies';\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  getMovies = async() => {\r\n    const {\r\n      data : {\r\n        data : {movies},\r\n         },\r\n    } =  await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\")\r\n    this.setState({movies, isLoading : false});\r\n    this.setState({movies});\r\n\r\n  };\r\n\r\n  // shouldComponentUpdate(nextState, nextProps ){\r\n  //   if(this.state.movies !== nextState.movies){\r\n  //     return false\r\n  //   }\r\n  //   return true;\r\n  // }\r\n\r\n  componentDidMount() {  \r\n    this.getMovies();\r\n    console.log(\"componentDidMount\")\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    console.log(\"render\")\r\n    return <section className=\"container\">{isLoading ? (<div className=\"loader\"><span className=\"loader__text\">Loading...</span></div>) : (\r\n    <div className=\"movies\">\r\n      {this.state.movies.map( (movies) => (\r\n      <Movies key = {movies.id} id = {movies.id} year = {movies.year} title = {movies.title} summary ={movies.summary} poster = {movies.medium_cover_image} genres={movies.genres}/>\r\n    ))} </div> )}</section>;\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}